# Generated by Django 5.2 on 2025-07-07 12:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='年级（部门）')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='学科')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar/%Y/%m/%d', verbose_name='头像')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('work_time', models.DateField(blank=True, null=True, verbose_name='参加工作时间')),
                ('party_time', models.DateField(blank=True, null=True, verbose_name='入党时间')),
                ('idnumber', models.CharField(blank=True, max_length=18, null=True, verbose_name='身份证号')),
                ('gender', models.SmallIntegerField(choices=[(1, '男'), (2, '女')], default=1, verbose_name='性别')),
                ('phone', models.CharField(max_length=11, verbose_name='电话')),
                ('nation', models.CharField(blank=True, max_length=100, null=True, verbose_name='民族')),
                ('political_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='政治面貌')),
                ('native_place', models.CharField(blank=True, max_length=100, null=True, verbose_name='籍贯')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='现住址')),
                ('first_education', models.CharField(blank=True, max_length=100, null=True, verbose_name='第一学历')),
                ('first_education_school', models.CharField(blank=True, max_length=100, null=True, verbose_name='第一学历毕业院校')),
                ('first_education_major', models.CharField(blank=True, max_length=100, null=True, verbose_name='第一学历专业')),
                ('first_education_time', models.DateField(blank=True, null=True, verbose_name='第一学历毕业时间')),
                ('highest_education', models.CharField(blank=True, max_length=100, null=True, verbose_name='最高学历')),
                ('highest_education_school', models.CharField(blank=True, max_length=100, null=True, verbose_name='最高学历毕业院校')),
                ('highest_education_major', models.CharField(blank=True, max_length=100, null=True, verbose_name='最高学历专业')),
                ('highest_education_time', models.DateField(blank=True, null=True, verbose_name='最高学历毕业时间')),
                ('professional_qualification', models.CharField(blank=True, max_length=100, null=True, verbose_name='专业资格')),
                ('professional_qualification_time', models.DateField(blank=True, null=True, verbose_name='专业资格取得时间')),
                ('professional_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='聘任职称')),
                ('professional_title_time', models.DateField(blank=True, null=True, verbose_name='聘任时间')),
                ('appointment_grade', models.CharField(blank=True, max_length=100, null=True, verbose_name='分级竞聘后聘任等级')),
                ('appointment_grade_time', models.DateField(blank=True, null=True, verbose_name='分级竞聘后聘任时间')),
                ('transfer_time', models.DateField(blank=True, null=True, verbose_name='调入我校时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.department', verbose_name='所属年级（部门）')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.subject', verbose_name='任教学科')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
